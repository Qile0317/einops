[{"path":[]},{"path":"https://qile0317.github.io/einops/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":[]},{"path":"https://qile0317.github.io/einops/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://qile0317.github.io/einops/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://qile0317.github.io/einops/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting qile.yang [] berkeley.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. leader(s) obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://qile0317.github.io/einops/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://qile0317.github.io/einops/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to APackOfTheClones Development","title":"Contributing to APackOfTheClones Development","text":"goal guide help get contributing APackOfTheClones quickly possible. guide divided two main pieces: Filing bug report issue. Suggesting change via pull request. Please note APackOfTheClones released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://qile0317.github.io/einops/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"","what":"Bug Reports","title":"Contributing to APackOfTheClones Development","text":"filing bug report via github issues, important thing include minimal reproducible example possible, problem can verified quickly, figure fix . three things need include make example reproducible: required packages, data, code. Packages loaded top script, ’s easy see ones example needs. easiest way include data use dput() generate R code recreate . example, recreate mtcars dataset R, ’d perform following steps: Run dput(mtcars) R Copy output reproducible script, type mtcars <- paste. Spend little bit time ensuring code easy others read: make sure ’ve used spaces variable names concise, informative use comments indicate problem lies best remove everything related problem. shorter code , easier understand. can check actually made reproducible example starting fresh R session pasting script . (Unless ’ve specifically asked , please don’t include output sessionInfo(). Although feel issue sure related versioning, go ahead.)","code":""},{"path":"https://qile0317.github.io/einops/CONTRIBUTING.html","id":"pure-feature-requests","dir":"","previous_headings":"","what":"Pure Feature Requests","title":"Contributing to APackOfTheClones Development","text":"Use github issues file pure enhancements/feature requests, describe much detail possible functionality/optimizations made functions, potentially pseudocode actual code implementation. Additionally motivate positive contribution package.","code":""},{"path":"https://qile0317.github.io/einops/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to APackOfTheClones Development","text":"contribute change, follow steps: Create branch git make changes. Push branch github issue pull request (PR). Discuss pull request. Iterate either PR accepted decided ’s good fit. steps described detail . might feel overwhelming first time get set , gets easier practice. get stuck point, please reach help contributors. ’re familiar git github, please start reading http://r-pkgs..co.nz/git.html Pull requests evaluated seven point checklist: Motivation. pull request clearly concisely motivate need change. Also include motivation NEWS new release APackOfTheClones comes ’s easy users see ’s changed. Add item top file use markdown formatting. news item end (@yourGithubUsername, #the_issue_number). related changes. submit pull request, please check make sure haven’t accidentally included unrelated changes. make harder see exactly ’s changed, evaluate unexpected side effects. PR corresponds git branch, expect submit multiple changes make sure create multiple branches. multiple changes depend , start first one don’t submit others first one processed. Use coding style package. Maintaining consistent style across whole code base makes much easier jump code. ’re modifying existing code, separate pull request change style greatly appreciated. general, breaking change externally exported function, ideally avoided. ’re adding new parameters new function, ’ll also need document roxygen. Make sure re-run devtools::document() code submitting. fixing bug adding new feature non-graphical function, please add testthat unit test. fixing bug visual output, please add visual test expect_doppelganger(), try much possible reduce svg snapshot size minimizing number individual polygons displayed. ’re adding new graphical feature, please add short example appropriate function. seems like lot work don’t worry pull request isn’t perfect. pull request (“PR”) process, require review approval merging. Note guide modified version ggplot2’s github contributing.md","code":""},{"path":"https://qile0317.github.io/einops/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Qile Yang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://qile0317.github.io/einops/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Qile Yang. Maintainer, author, copyright holder.","code":""},{"path":"https://qile0317.github.io/einops/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yang Q (2025). einops: Flexible powerful tensor operations readable reliable code. R package version 0.0.0.9000, https://github.com/Qile0317/einops.","code":"@Manual{,   title = {einops: Flexible and powerful tensor operations for readable and reliable code},   author = {Qile Yang},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/Qile0317/einops}, }"},{"path":"https://qile0317.github.io/einops/index.html","id":"einops","dir":"","previous_headings":"","what":"Flexible and powerful tensor operations for readable and reliable code","title":"Flexible and powerful tensor operations for readable and reliable code","text":"work progress R implementation einops. Flexible powerful tensor operations readable reliable code.  Supports base R arrays (includes matrices, subtype base arrays), types frameworks torch future.","code":""},{"path":"https://qile0317.github.io/einops/index.html","id":"tweets-from-the-original-python-implementation","dir":"","previous_headings":"","what":"Tweets (From the original python implementation)","title":"Flexible and powerful tensor operations for readable and reliable code","text":"case need convincing arguments setting aside time learn einsum einops… Tim Rocktäschel Writing better code PyTorch einops 👌 Andrej Karpathy Slowly surely, einops seeping every nook cranny code. find shuffling around bazillion dimensional tensors, might change life Nasim Rahaman testimonials","code":""},{"path":"https://qile0317.github.io/einops/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flexible and powerful tensor operations for readable and reliable code","text":"","code":"devtools::install_github(\"Qile0317/einops\")"},{"path":"https://qile0317.github.io/einops/index.html","id":"tutorials-python-version","dir":"","previous_headings":"","what":"Tutorials (Python version)","title":"Flexible and powerful tensor operations for readable and reliable code","text":"links python version, R api essentially identical Tutorials convenient way see einops action part 1: einops fundamentals part 2: einops deep learning part 3: packing unpacking part 4: improve pytorch code einops Kapil Sachdeva recorded small intro einops.","code":""},{"path":"https://qile0317.github.io/einops/index.html","id":"api","dir":"","previous_headings":"","what":"API","title":"Flexible and powerful tensor operations for readable and reliable code","text":"einops minimalistic yet powerful API. Three core operations provided (einops tutorial shows cover stacking, reshape, transposition, squeeze/unsqueeze, repeat, tile, concatenate, view numerous reductions)","code":"library(einops) # rearrange elements according to the pattern output_tensor <- rearrange(input_tensor, 't b c -> b c t') # combine rearrangement and reduction output_tensor <- reduce(input_tensor, 'b c (h h2) (w w2) -> b h w c', 'mean', h2=2, w2=2) # copy along a new axis (note: repeat is surrounded by ticks. einops.repeat() works too) output_tensor <- `repeat`(input_tensor, 'h w -> h w c', c = 3)"},{"path":"https://qile0317.github.io/einops/index.html","id":"naming","dir":"","previous_headings":"","what":"Naming","title":"Flexible and powerful tensor operations for readable and reliable code","text":"einops stands Einstein-Inspired Notation operations (though “Einstein operations” attractive easier remember). Notation loosely inspired Einstein summation (particular numpy.einsum operation).","code":""},{"path":"https://qile0317.github.io/einops/index.html","id":"development-roadmap-will-be-deleted-after-completion","dir":"","previous_headings":"","what":"Development Roadmap (Will be deleted after completion)","title":"Flexible and powerful tensor operations for readable and reliable code","text":"Lexical Analysis (lex(\"expression\") -> EinopsTokenSequence()) Parser (parse_einops_ast(EinopsTokenSequence()) -> EinopsAst()) einops:::parse_shape.array() Semantic Analysis (validate_reduction_operation(EinopsAst()), expand_ellipsis(EinopsAst()) -> EinopsAst()) Intermediate Representation generation (prepare_transformation_recipe(EinopsAst()) -> TransformRecipe()) Code generation (create_execution_plan(TransformRecipe()) -> EinopsExecutionPlan()) Execution (apply_recipe(EinopsExecutionPlan()), EinopsBackend() -> output) einops:::repeat.array() einops:::rearrange.array() einops:::reduce.array() Make Github Repository Public einops:::parse_shape.torch_tensor() TorchBackend() einops:::repeat.torch_tensor() einops:::rearrange.torch_tensor() einops:::Rearrange.torch() einops:::reduce.torch_tensor() einops:::Reduce.torch() packing unpacking expression interpretation einops:::pack.array() einops:::unpack.array() einops:::pack.torch_tensor() einops:::unpack.torch_tensor() EinMix torch einops::einsum.array() einops::einsum.torch_tensor() Expand Roadmp incorporating backends","code":""},{"path":"https://qile0317.github.io/einops/index.html","id":"nice-to-haves","dir":"","previous_headings":"Development Roadmap (Will be deleted after completion)","what":"Nice to Haves","title":"Flexible and powerful tensor operations for readable and reliable code","text":"Dockerfile Google Analytics docsite R-universe upload Much better README Rcpp Acceleration needed Copy existing einops docs pages vignettes update NEWS.md CRAN release","code":""},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"function initializes new list-like object using specified keys values provided. resulting map preserves order insertion allow modification removal existing entries. AddOnlyOrderedMap can interacted exactly like regular list, possessing methods [, [[, [<-, [[<- behaviour, except NULL passed since removal permitted. keys() generic defined class, return list keys insertion order. has_key() generic also defined class, returning TRUE/FALSE key exists. Lastly, values() generic defined get values insertion order.","code":""},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"","code":"AddOnlyOrderedMap(   keys = NULL,   values = NULL,   key_validator = Negate(is.null),   val_validator = Negate(is.null) )"},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"keys Optional list. vector keys initialize map . Can R object. assumed keys unique, otherwise behaviour undefined. scalar value. desired, wrap list(). values Optional list. iterable vector values corresponding keys. scalar value. desired, wrap list(). key_validator Optional function. function validates individual keys insertion, returning TRUE valid, FALSE otherwise. val_validator Optional function. function validates individual values insertion, returning TRUE valid, FALSE otherwise.","code":""},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"AddOnlyOrderedMap instance","code":""},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"average time complexity operations linear respect number insertion/query inputs, contrast R lists quadratic time complexity operations.","code":""},{"path":"https://qile0317.github.io/einops/reference/AddOnlyOrderedMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an AddOnlyOrderedMap instance — AddOnlyOrderedMap","text":"","code":"map <- AddOnlyOrderedMap(keys = c(\"a\", \"b\"), values = c(1, 2)) #> Error in AddOnlyOrderedMap(keys = c(\"a\", \"b\"), values = c(1, 2)): could not find function \"AddOnlyOrderedMap\"  # With validators key_val <- function(k) is.character(k) val_val <- function(v) is.numeric(v) map_validated <- AddOnlyOrderedMap(   keys = c(\"a\", \"b\"),   values = c(1, 2),   key_validator = key_val,   val_validator = val_val ) #> Error in AddOnlyOrderedMap(keys = c(\"a\", \"b\"), values = c(1, 2), key_validator = key_val,     val_validator = val_val): could not find function \"AddOnlyOrderedMap\""},{"path":"https://qile0317.github.io/einops/reference/AxisNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct an instance of an AxisNames class — AxisNames","title":"Construct an instance of an AxisNames class — AxisNames","text":"wrapper list(), elements may singular character(), ConstantAstNode() AstNode objects. (1 level nesting allowed, essentially another representation OneSidedAstNode(). Note using c() AxisNames object, object another AxisNames(), elements simply appended first object. nest (case GroupAstNode), must append list(AxisNames(...)) first object instead.","code":""},{"path":"https://qile0317.github.io/einops/reference/AxisNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct an instance of an AxisNames class — AxisNames","text":"","code":"AxisNames(...)"},{"path":"https://qile0317.github.io/einops/reference/AxisNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct an instance of an AxisNames class — AxisNames","text":"... list elements arbitrary number elements","code":""},{"path":"https://qile0317.github.io/einops/reference/AxisNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct an instance of an AxisNames class — AxisNames","text":"AxisNames object, list specific class","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":null,"dir":"Reference","previous_headings":"","what":"Singleton Backend Registry, managing all available backends. — BackendRegistry","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"Contains global backend pool","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"R6P::Singleton -> BackendRegistry","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"R6P::Singleton$initialize()","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"BackendRegistry$get_backend() BackendRegistry$set_debug() BackendRegistry$register_backend()","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"method-get-backend-","dir":"Reference","previous_headings":"","what":"Method get_backend()","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"detect return relevant backend input","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"","code":"BackendRegistry$get_backend(tensor)"},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"tensor support tensor-like class","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"singleton instance BackendRegistry() object","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"method-set-debug-","dir":"Reference","previous_headings":"","what":"Method set_debug()","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"Set whether debug messages displayed","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"","code":"BackendRegistry$set_debug(flag = TRUE)"},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"flag boolean","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"object","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"method-register-backend-","dir":"Reference","previous_headings":"","what":"Method register_backend()","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"Register new backend singleton","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"","code":"BackendRegistry$register_backend(backend_class)"},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"backend_class EinopsBackend subclass generator","code":""},{"path":"https://qile0317.github.io/einops/reference/BackendRegistry.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Singleton Backend Registry, managing all available backends. — BackendRegistry","text":"object","code":""},{"path":"https://qile0317.github.io/einops/reference/ConstantAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ConstantAstNode — ConstantAstNode","title":"Create a ConstantAstNode — ConstantAstNode","text":"Create ConstantAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/ConstantAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ConstantAstNode — ConstantAstNode","text":"","code":"ConstantAstNode(count, src = list())"},{"path":"https://qile0317.github.io/einops/reference/ConstantAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ConstantAstNode — ConstantAstNode","text":"count Character string representing constant value src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/ConstantAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ConstantAstNode — ConstantAstNode","text":"ConstantAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsAst.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an EinopsAst root node — EinopsAst","title":"Create an EinopsAst root node — EinopsAst","text":"Create EinopsAst root node","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsAst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an EinopsAst root node — EinopsAst","text":"","code":"EinopsAst(input_axes, output_axes, src)"},{"path":"https://qile0317.github.io/einops/reference/EinopsAst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an EinopsAst root node — EinopsAst","text":"input_axes List axis nodes input pattern, NothingAstNode, OneSidedAstNode output_axes List axis nodes input pattern, NothingAstNode, OneSidedAstNode src List start position covering full pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsAst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an EinopsAst root node — EinopsAst","text":"EinopsAst object","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsExecutionPlan.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for an Execution Plan (CookedRecipe in the python sourcecode) — EinopsExecutionPlan","title":"Constructor for an Execution Plan (CookedRecipe in the python sourcecode) — EinopsExecutionPlan","text":"Constructor Execution Plan (CookedRecipe python sourcecode)","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsExecutionPlan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for an Execution Plan (CookedRecipe in the python sourcecode) — EinopsExecutionPlan","text":"","code":"EinopsExecutionPlan(   init_shapes,   axes_reordering,   reduced_axes,   added_axes,   final_shapes,   n_axes_w_added )"},{"path":"https://qile0317.github.io/einops/reference/EinopsExecutionPlan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for an Execution Plan (CookedRecipe in the python sourcecode) — EinopsExecutionPlan","text":"init_shapes Optional list integers specifying initial tensor shapes reshaping. axes_reordering Optional list integers specifying order transposing tensor axes. reduced_axes List integers specifying axes reduce operations. added_axes r2r::hashmap() mapping axis positions (int) lengths (int) axes added. final_shapes list integers specifying final tensor shapes reshaping. Signify nullness integer(0) n_axes_w_added Integer specifying total number axes adding new axes.","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsExecutionPlan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for an Execution Plan (CookedRecipe in the python sourcecode) — EinopsExecutionPlan","text":"object class EinopsExecutionPlan, list containing execution plan transforming tensors according specified recipe.","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsTokenSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"EinopsTokenSequence constructor — EinopsTokenSequence","title":"EinopsTokenSequence constructor — EinopsTokenSequence","text":"Helper build token sequence (list tokens)","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsTokenSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EinopsTokenSequence constructor — EinopsTokenSequence","text":"","code":"EinopsTokenSequence(...)"},{"path":"https://qile0317.github.io/einops/reference/EinopsTokenSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EinopsTokenSequence constructor — EinopsTokenSequence","text":"... tokens EinopsTokenSequences include","code":""},{"path":"https://qile0317.github.io/einops/reference/EinopsTokenSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EinopsTokenSequence constructor — EinopsTokenSequence","text":"list tokens","code":""},{"path":"https://qile0317.github.io/einops/reference/EllipsisAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an EllipsisAstNode — EllipsisAstNode","title":"Create an EllipsisAstNode — EllipsisAstNode","text":"Create EllipsisAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/EllipsisAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an EllipsisAstNode — EllipsisAstNode","text":"","code":"EllipsisAstNode(src)"},{"path":"https://qile0317.github.io/einops/reference/EllipsisAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an EllipsisAstNode — EllipsisAstNode","text":"src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/EllipsisAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an EllipsisAstNode — EllipsisAstNode","text":"EllipsisAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/GroupAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GroupAstNode — GroupAstNode","title":"Create a GroupAstNode — GroupAstNode","text":"Create GroupAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/GroupAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GroupAstNode — GroupAstNode","text":"","code":"GroupAstNode(children, src = list())"},{"path":"https://qile0317.github.io/einops/reference/GroupAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GroupAstNode — GroupAstNode","text":"children List axis nodes contained group, potentially empty src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/GroupAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a GroupAstNode — GroupAstNode","text":"GroupAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/NamedAxisAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NamedAxisAstNode — NamedAxisAstNode","title":"Create a NamedAxisAstNode — NamedAxisAstNode","text":"Create NamedAxisAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/NamedAxisAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NamedAxisAstNode — NamedAxisAstNode","text":"","code":"NamedAxisAstNode(name, src = list())"},{"path":"https://qile0317.github.io/einops/reference/NamedAxisAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NamedAxisAstNode — NamedAxisAstNode","text":"name Character string, name axis src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/NamedAxisAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NamedAxisAstNode — NamedAxisAstNode","text":"NamedAxisAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/NothingAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NothingAstNode — NothingAstNode","title":"Create a NothingAstNode — NothingAstNode","text":"Create NothingAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/NothingAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NothingAstNode — NothingAstNode","text":"","code":"NothingAstNode()"},{"path":"https://qile0317.github.io/einops/reference/NothingAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NothingAstNode — NothingAstNode","text":"src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/NothingAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NothingAstNode — NothingAstNode","text":"NothingAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/OneSidedAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a OneSidedAstNode (wrapper for input/output axes lists) — OneSidedAstNode","title":"Create a OneSidedAstNode (wrapper for input/output axes lists) — OneSidedAstNode","text":"Create OneSidedAstNode (wrapper input/output axes lists)","code":""},{"path":"https://qile0317.github.io/einops/reference/OneSidedAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a OneSidedAstNode (wrapper for input/output axes lists) — OneSidedAstNode","text":"","code":"OneSidedAstNode(...)"},{"path":"https://qile0317.github.io/einops/reference/OneSidedAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a OneSidedAstNode (wrapper for input/output axes lists) — OneSidedAstNode","text":"... Axis nodes (single list axis nodes) already OneSidedAstNode, returned .","code":""},{"path":"https://qile0317.github.io/einops/reference/OneSidedAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a OneSidedAstNode (wrapper for input/output axes lists) — OneSidedAstNode","text":"OneSidedAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/TransformRecipe.html","id":null,"dir":"Reference","previous_headings":"","what":"TransformRecipe S3 constructor — TransformRecipe","title":"TransformRecipe S3 constructor — TransformRecipe","text":"Recipe describes actual computation pathway. Can applied tensor variable.","code":""},{"path":"https://qile0317.github.io/einops/reference/TransformRecipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TransformRecipe S3 constructor — TransformRecipe","text":"","code":"TransformRecipe(   elementary_axes_lengths,   axis_name2elementary_axis,   input_composition_known_unknown,   axes_permutation,   first_reduced_axis,   added_axes,   output_composite_axes )"},{"path":"https://qile0317.github.io/einops/reference/TransformRecipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TransformRecipe S3 constructor — TransformRecipe","text":"elementary_axes_lengths Integer vector. List sizes elementary axes appear input (left) expression. (computing unknown parts) shape first transposition. include ellipsis dimensions. axis_name2elementary_axis r2r::hashmap() Mapping name position. additional axes provided, set prev array. keys unclassed AxisNames() objects, values integer positions elementary axes. input_composition_known_unknown List list(known, unknown). known unknown integer vectors. axes_permutation Integer vector. Permutation applied elementary axes, ellipsis absent. first_reduced_axis Integer length 1. First position reduced axes. Permutation puts reduced axes end, need know first position. added_axes r2r::hashmap(). Axis position -> axis index. positions elementary axes appear. output_composite_axes List integer vectors. Ids axes appear result. pointers elementary_axes_lengths, used infer result dimensions.","code":""},{"path":"https://qile0317.github.io/einops/reference/TransformRecipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TransformRecipe S3 constructor — TransformRecipe","text":"object class 'TransformRecipe'.","code":""},{"path":"https://qile0317.github.io/einops/reference/UnderscoreAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an UnderscoreAstNode — UnderscoreAstNode","title":"Create an UnderscoreAstNode — UnderscoreAstNode","text":"Create UnderscoreAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/UnderscoreAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an UnderscoreAstNode — UnderscoreAstNode","text":"","code":"UnderscoreAstNode(src = list())"},{"path":"https://qile0317.github.io/einops/reference/UnderscoreAstNode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an UnderscoreAstNode — UnderscoreAstNode","text":"src List start position","code":""},{"path":"https://qile0317.github.io/einops/reference/UnderscoreAstNode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an UnderscoreAstNode — UnderscoreAstNode","text":"UnderscoreAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/add_relative_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a flat AxisNames() object, add relative positions to each ConstantAstNode in the list. This is used for comparing ConstantAstNode objects in the AST, as they may have the same count, different/same starts, but same/different relative positions. — add_relative_pos","title":"Given a flat AxisNames() object, add relative positions to each ConstantAstNode in the list. This is used for comparing ConstantAstNode objects in the AST, as they may have the same count, different/same starts, but same/different relative positions. — add_relative_pos","text":"Given flat AxisNames() object, add relative positions ConstantAstNode list. used comparing ConstantAstNode objects AST, may count, different/starts, /different relative positions.","code":""},{"path":"https://qile0317.github.io/einops/reference/add_relative_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a flat AxisNames() object, add relative positions to each ConstantAstNode in the list. This is used for comparing ConstantAstNode objects in the AST, as they may have the same count, different/same starts, but same/different relative positions. — add_relative_pos","text":"","code":"add_relative_pos(axes)  add_rel_pos(axes)"},{"path":"https://qile0317.github.io/einops/reference/add_relative_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a flat AxisNames() object, add relative positions to each ConstantAstNode in the list. This is used for comparing ConstantAstNode objects in the AST, as they may have the same count, different/same starts, but same/different relative positions. — add_relative_pos","text":"axes flat AxisNames() object","code":""},{"path":"https://qile0317.github.io/einops/reference/add_relative_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a flat AxisNames() object, add relative positions to each ConstantAstNode in the list. This is used for comparing ConstantAstNode objects in the AST, as they may have the same count, different/same starts, but same/different relative positions. — add_relative_pos","text":"modified AxisNames() object relative_pos added ConstantAstNode list.","code":""},{"path":"https://qile0317.github.io/einops/reference/append.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Merging — append","title":"Vector Merging — append","text":"Add elements vector.","code":""},{"path":"https://qile0317.github.io/einops/reference/append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Merging — append","text":"","code":"append(x, values, after = length(x), ...)"},{"path":"https://qile0317.github.io/einops/reference/append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Merging — append","text":"x vector values appended . values included modified vector. subscript, values appended. ... Additional arguments passed methods.","code":""},{"path":"https://qile0317.github.io/einops/reference/append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Merging — append","text":"vector containing values x elements   values appended specified element x.","code":""},{"path":"https://qile0317.github.io/einops/reference/append.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vector Merging — append","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988)   New S Language.   Wadsworth & Brooks/Cole.","code":""},{"path":"https://qile0317.github.io/einops/reference/append.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Merging — append","text":"","code":"append(1:5, 0:1, after = 3) #> [1] 1 2 3 0 1 4 5"},{"path":"https://qile0317.github.io/einops/reference/apply_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a TransformRecipe to a Tensor — apply_recipe","title":"Apply a TransformRecipe to a Tensor — apply_recipe","text":"function applies TransformRecipe tensor, performing rearrangement reduction specified recipe. TODO docs parts compilation pipeline .","code":""},{"path":"https://qile0317.github.io/einops/reference/apply_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a TransformRecipe to a Tensor — apply_recipe","text":"","code":"apply_recipe(backend, recipe, tensor, reduction_type, axes_lengths)"},{"path":"https://qile0317.github.io/einops/reference/apply_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a TransformRecipe to a Tensor — apply_recipe","text":"backend EinopsBackend() use tensor operations. recipe TransformRecipe() specifies transform tensor. tensor tensor transformed reduction_type character length 1 specifies type reduction apply. axes_lengths TODO check - think just integer vector?","code":""},{"path":"https://qile0317.github.io/einops/reference/apply_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a TransformRecipe to a Tensor — apply_recipe","text":"tensor transformed according recipe, type (possible) input tensor.","code":""},{"path":"https://qile0317.github.io/einops/reference/as_axis_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an AstNode into an AxisNames() object — as_axis_names","title":"Convert an AstNode into an AxisNames() object — as_axis_names","text":"Convert AstNode AxisNames() object","code":""},{"path":"https://qile0317.github.io/einops/reference/as_axis_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an AstNode into an AxisNames() object — as_axis_names","text":"","code":"as_axis_names(ast, ...)"},{"path":"https://qile0317.github.io/einops/reference/as_axis_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an AstNode into an AxisNames() object — as_axis_names","text":"ast AstNode input ... args","code":""},{"path":"https://qile0317.github.io/einops/reference/as_axis_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an AstNode into an AxisNames() object — as_axis_names","text":"AxisNames() object axes order","code":""},{"path":[]},{"path":"https://qile0317.github.io/einops/reference/as_iterables.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a list of iterables (lists) — as_iterables","title":"Convert an object to a list of iterables (lists) — as_iterables","text":"function converts object list iterables, iterable list elements. function generic can extended different classes.","code":""},{"path":"https://qile0317.github.io/einops/reference/as_iterables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a list of iterables (lists) — as_iterables","text":"","code":"as_iterables(x, ...)"},{"path":"https://qile0317.github.io/einops/reference/as_iterables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a list of iterables (lists) — as_iterables","text":"x input object converted ... additional arguments (used)","code":""},{"path":"https://qile0317.github.io/einops/reference/as_iterables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object to a list of iterables (lists) — as_iterables","text":"list iterables, iterable list elements","code":""},{"path":"https://qile0317.github.io/einops/reference/as_iterables.html","id":"axisnames","dir":"Reference","previous_headings":"","what":"AxisNames","title":"Convert an object to a list of iterables (lists) — as_iterables","text":"method converts AxisNames object list iterables. element AxisNames processed extract name constant value. element ConstantAstNode count 1, converted empty list. Otherwise, wrapped list. element NamedAxisAstNode, name extracted. Regular AxisNames nested unclassed","code":""},{"path":"https://qile0317.github.io/einops/reference/create_execution_plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct all actual parameters using shape. — create_execution_plan","title":"Reconstruct all actual parameters using shape. — create_execution_plan","text":"implements _reconstruct_from_shape_uncached python implementation einops. future, cached version may implemented.","code":""},{"path":"https://qile0317.github.io/einops/reference/create_execution_plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct all actual parameters using shape. — create_execution_plan","text":"","code":"create_execution_plan(recipe, shape, axes_dims)"},{"path":"https://qile0317.github.io/einops/reference/create_execution_plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct all actual parameters using shape. — create_execution_plan","text":"recipe populated TransformRecipe() object shape vector integers representing shape tensor. axes_dims named list axes names dimensions/lengths.","code":""},{"path":"https://qile0317.github.io/einops/reference/create_execution_plan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct all actual parameters using shape. — create_execution_plan","text":"EinopsExecutionPlan object contains execution plan transforming tensors according specified recipe shape.","code":""},{"path":"https://qile0317.github.io/einops/reference/dot-next_token.html","id":null,"dir":"Reference","previous_headings":"","what":".next_token — .next_token","title":".next_token — .next_token","text":"Internal helper get next token stream","code":""},{"path":"https://qile0317.github.io/einops/reference/dot-next_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".next_token — .next_token","text":"","code":".next_token(tokens, pos)"},{"path":"https://qile0317.github.io/einops/reference/dot-next_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".next_token — .next_token","text":"tokens list tokens pos current position","code":""},{"path":"https://qile0317.github.io/einops/reference/dot-next_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".next_token — .next_token","text":"list token new position","code":""},{"path":"https://qile0317.github.io/einops/reference/einops-package.html","id":null,"dir":"Reference","previous_headings":"","what":"einops: Flexible and powerful tensor operations for readable and reliable code — einops-package","title":"einops: Flexible and powerful tensor operations for readable and reliable code — einops-package","text":"R port einops library flexible powerful array tensor operations. provides concise readable syntax reshaping, rearranging, combination.","code":""},{"path":[]},{"path":"https://qile0317.github.io/einops/reference/einops-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"einops: Flexible and powerful tensor operations for readable and reliable code — einops-package","text":"Maintainer: Qile Yang qile.yang@berkeley.edu (ORCID) [copyright holder]","code":""},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"operation includes functionality repeat, tile, broadcast functions.","code":""},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"","code":"einops.repeat(x, expr, ...)  repeat x"},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"x tensor: array, matrix, list arrays shape type expr string: reduction pattern ... either corresponding axes lengths single list .","code":""},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"tensor type input, dimensions according output pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"composing axes, C-order enumeration used (consecutive elements different last axis). Find examples vignettes.","code":""},{"path":"https://qile0317.github.io/einops/reference/einops.repeat.html","id":"why-can-t-the-function-be-called-as-repeat-","dir":"Reference","previous_headings":"","what":"Why can't the function be called as repeat()?","title":"Allows reordering elements and repeating them in arbitrary combinations. — einops.repeat","text":"repeat reserved keyword R acts (TRUE), way overridden. Hence, function can called einops.repeat() using backticks `repeat`().","code":""},{"path":[]},{"path":"https://qile0317.github.io/einops/reference/expand_ellipsis.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand ellipses of an EinopsAst — expand_ellipsis","title":"Expand ellipses of an EinopsAst — expand_ellipsis","text":"Helper prepare_transformation_recipe(). function expands relevant ellipsis ast node inplace sequence NamedAxisAstNode nodes, node name like \"...1\", \"...2\", etc. empty src list. Also validation ellipses syntax using ndim.","code":""},{"path":"https://qile0317.github.io/einops/reference/expand_ellipsis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand ellipses of an EinopsAst — expand_ellipsis","text":"","code":"expand_ellipsis(einops_ast, ndim)"},{"path":"https://qile0317.github.io/einops/reference/expand_ellipsis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand ellipses of an EinopsAst — expand_ellipsis","text":"einops_ast EinopsAst ndim integer. Number dimensions input tensor","code":""},{"path":"https://qile0317.github.io/einops/reference/expand_ellipsis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand ellipses of an EinopsAst — expand_ellipsis","text":"expanded EinopsAst ellipses expanded","code":""},{"path":"https://qile0317.github.io/einops/reference/find_top_level_arrow_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the arrow in a token sequence — find_top_level_arrow_index","title":"Find the arrow in a token sequence — find_top_level_arrow_index","text":"Find arrow token sequence","code":""},{"path":"https://qile0317.github.io/einops/reference/find_top_level_arrow_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the arrow in a token sequence — find_top_level_arrow_index","text":"","code":"find_top_level_arrow_index(tokens)"},{"path":"https://qile0317.github.io/einops/reference/find_top_level_arrow_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the arrow in a token sequence — find_top_level_arrow_index","text":"tokens EinopsTokenSequence object","code":""},{"path":"https://qile0317.github.io/einops/reference/find_top_level_arrow_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the arrow in a token sequence — find_top_level_arrow_index","text":"one-indexed Integer position arrow token","code":""},{"path":"https://qile0317.github.io/einops/reference/get_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to detect and return backend — get_backend","title":"Main function to detect and return backend — get_backend","text":"Main function detect return backend","code":""},{"path":"https://qile0317.github.io/einops/reference/get_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to detect and return backend — get_backend","text":"","code":"get_backend(tensor)"},{"path":"https://qile0317.github.io/einops/reference/get_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to detect and return backend — get_backend","text":"tensor support tensor-like class","code":""},{"path":"https://qile0317.github.io/einops/reference/get_backend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to detect and return backend — get_backend","text":"instance BackendRegistry class","code":""},{"path":"https://qile0317.github.io/einops/reference/get_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a OneSidedAstNode object, get unique identifiers — get_identifiers","title":"Given a OneSidedAstNode object, get unique identifiers — get_identifiers","text":"get unordered list, representing set unique identifiers one side expression. Named nodes become character representing name, ConstantAstNode nodes just , aside 1 ignored. GroupAstNode nodes flattened, EllipsisAstNode nodes ignored.","code":""},{"path":"https://qile0317.github.io/einops/reference/get_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a OneSidedAstNode object, get unique identifiers — get_identifiers","text":"","code":"get_identifiers(ast, add_relative_pos = FALSE, ...)"},{"path":"https://qile0317.github.io/einops/reference/get_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a OneSidedAstNode object, get unique identifiers — get_identifiers","text":"ast Abstract Syntax Tree (AST) einops expression add_relative_pos boolean indicating whether add relative positions ConstantAstNode objects output. ... additional arguments (used)","code":""},{"path":"https://qile0317.github.io/einops/reference/get_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a OneSidedAstNode object, get unique identifiers — get_identifiers","text":"AxisNames() unique identifiers","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ordered_axis_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ordered axis names from a OneSidedAstNode, removing all nesting. — get_ordered_axis_names","title":"Get the ordered axis names from a OneSidedAstNode, removing all nesting. — get_ordered_axis_names","text":"Get ordered axis names OneSidedAstNode, removing nesting.","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ordered_axis_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ordered axis names from a OneSidedAstNode, removing all nesting. — get_ordered_axis_names","text":"","code":"get_ordered_axis_names(ast, ...)"},{"path":"https://qile0317.github.io/einops/reference/get_ordered_axis_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ordered axis names from a OneSidedAstNode, removing all nesting. — get_ordered_axis_names","text":"ast OneSidedAstNode object ... additional arguments (used)","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ordered_axis_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the ordered axis names from a OneSidedAstNode, removing all nesting. — get_ordered_axis_names","text":"list() axis names","code":""},{"path":"https://qile0317.github.io/einops/reference/get_reduced_axis_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reduced axis names by removing axes present in y from x — get_reduced_axis_names","title":"Get reduced axis names by removing axes present in y from x — get_reduced_axis_names","text":"Get reduced axis names removing axes present y x","code":""},{"path":"https://qile0317.github.io/einops/reference/get_reduced_axis_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reduced axis names by removing axes present in y from x — get_reduced_axis_names","text":"","code":"get_reduced_axis_names(x, y, ...)"},{"path":"https://qile0317.github.io/einops/reference/get_reduced_axis_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reduced axis names by removing axes present in y from x — get_reduced_axis_names","text":"x AxisNames object reduce y AxisNames object containing axes remove ... additional arguments (used)","code":""},{"path":"https://qile0317.github.io/einops/reference/get_reduced_axis_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reduced axis names by removing axes present in y from x — get_reduced_axis_names","text":"AxisNames object axes x y","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ungrouped_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"get flat list of all AstNodes in order, including children of GroupAstNodes. — get_ungrouped_nodes","title":"get flat list of all AstNodes in order, including children of GroupAstNodes. — get_ungrouped_nodes","text":"get flat list AstNodes order, including children GroupAstNodes.","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ungrouped_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get flat list of all AstNodes in order, including children of GroupAstNodes. — get_ungrouped_nodes","text":"","code":"get_ungrouped_nodes(ast, ...)"},{"path":"https://qile0317.github.io/einops/reference/get_ungrouped_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get flat list of all AstNodes in order, including children of GroupAstNodes. — get_ungrouped_nodes","text":"ast AstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/get_ungrouped_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get flat list of all AstNodes in order, including children of GroupAstNodes. — get_ungrouped_nodes","text":"flat list AstNodes","code":""},{"path":"https://qile0317.github.io/einops/reference/lex.html","id":null,"dir":"Reference","previous_headings":"","what":"Lexically analyze einops pattern into structured tokens — lex","title":"Lexically analyze einops pattern into structured tokens — lex","text":"Lexically analyze einops pattern structured tokens","code":""},{"path":"https://qile0317.github.io/einops/reference/lex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lexically analyze einops pattern into structured tokens — lex","text":"","code":"lex(pattern)"},{"path":"https://qile0317.github.io/einops/reference/lex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lexically analyze einops pattern into structured tokens — lex","text":"pattern character string einops pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/lex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lexically analyze einops pattern into structured tokens — lex","text":"list token objects type, value, start, end fields","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_axes_iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a sequence of axis tokens — parse_axes_iter","title":"Parse a sequence of axis tokens — parse_axes_iter","text":"Parse sequence axis tokens","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_axes_iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a sequence of axis tokens — parse_axes_iter","text":"","code":"parse_axes_iter(tokens)"},{"path":"https://qile0317.github.io/einops/reference/parse_axes_iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a sequence of axis tokens — parse_axes_iter","text":"tokens List tokens representing one side pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_axes_iter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a sequence of axis tokens — parse_axes_iter","text":"List AST nodes","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_einops_ast.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse einops pattern into AST — parse_einops_ast","title":"Parse einops pattern into AST — parse_einops_ast","text":"python implementation, preprocess 1's () parse equivalent GroupAstNode. , ","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_einops_ast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse einops pattern into AST — parse_einops_ast","text":"","code":"parse_einops_ast(tokens)"},{"path":"https://qile0317.github.io/einops/reference/parse_einops_ast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse einops pattern into AST — parse_einops_ast","text":"tokens EinopsTokenSequence object lexer","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_einops_ast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse einops pattern into AST — parse_einops_ast","text":"EinopsAst object","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_onesided_ast.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a one-sided einops pattern into OneSidedAstNode — parse_onesided_ast","title":"Parse a one-sided einops pattern into OneSidedAstNode — parse_onesided_ast","text":"Parse one-sided einops pattern OneSidedAstNode","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_onesided_ast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a one-sided einops pattern into OneSidedAstNode — parse_onesided_ast","text":"","code":"parse_onesided_ast(tokens)"},{"path":"https://qile0317.github.io/einops/reference/parse_onesided_ast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a one-sided einops pattern into OneSidedAstNode — parse_onesided_ast","text":"tokens EinopsTokenSequence object lexer (arrow expected)","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_onesided_ast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a one-sided einops pattern into OneSidedAstNode — parse_onesided_ast","text":"OneSidedAstNode object","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","title":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","text":"Use underscore skip dimension parsing.","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","text":"","code":"parse_shape(x, expr, ...)"},{"path":"https://qile0317.github.io/einops/reference/parse_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","text":"x tensor supported framework expr character length 1, space separated names axes, underscore means skip axis ... additional arguments passed methods","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","text":"named list, maps axes names lengths","code":""},{"path":"https://qile0317.github.io/einops/reference/parse_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a tensor shape to dictionary mapping axes names to their lengths. — parse_shape","text":"","code":"# Use underscore to skip the dimension in parsing. x <- array(0, dim = c(2, 3, 5, 7)) parse_shape(x, 'batch _ h w') #> $batch #> [1] 2 #>  #> $h #> [1] 5 #>  #> $w #> [1] 7 #>  # $batch # [1] 2 # $h # [1] 5 # $w # [1] 7  # `parse_shape` output can be used to specify axes_lengths for other # operations: y <- array(0, dim = 700) shape_info <- parse_shape(x, 'b _ h w') # rearrange(y, '(b c h w) -> b c h w', shape_info) would give shape # (2, 10, 5, 7)"},{"path":"https://qile0317.github.io/einops/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://qile0317.github.io/einops/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://qile0317.github.io/einops/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://qile0317.github.io/einops/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://qile0317.github.io/einops/reference/pprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print — pprint","title":"Pretty Print — pprint","text":"convenience function prints repr() object. similar python's pprint.pprint(). Usually, ensure object displayed terminal using pprint format, just define print.that_object_class method calls pprint().","code":""},{"path":"https://qile0317.github.io/einops/reference/pprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print — pprint","text":"","code":"pprint(x, ...)"},{"path":"https://qile0317.github.io/einops/reference/pprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print — pprint","text":"x Object pretty print ... Additional arguments passed repr()","code":""},{"path":"https://qile0317.github.io/einops/reference/pprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty Print — pprint","text":"input object, invisibly","code":""},{"path":"https://qile0317.github.io/einops/reference/prepare_transformation_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Transformation Recipe for an einops call — prepare_transformation_recipe","title":"Create the Transformation Recipe for an einops call — prepare_transformation_recipe","text":"function following parts einops 'compilation' pipeline: Lexing: tokenizing input expression string Parsing: converting tokens Abstract Syntax Tree (AST) Syntactic Analysis: operation-based AST validation pass TODO Compile syntactic info intermediate representation (IR). TODO IR generation: return TransformRecipe() object, acting IR einops.","code":""},{"path":"https://qile0317.github.io/einops/reference/prepare_transformation_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Transformation Recipe for an einops call — prepare_transformation_recipe","text":"","code":"prepare_transformation_recipe(expr, func, axes_names, ndim)"},{"path":"https://qile0317.github.io/einops/reference/prepare_transformation_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Transformation Recipe for an einops call — prepare_transformation_recipe","text":"expr input einops expression string func string/function indicating reduction operation axes_names user defined keyword args dims list(). Names correspond axes variable names, values dimension. ndim count number dimensions input tensor","code":""},{"path":"https://qile0317.github.io/einops/reference/prepare_transformation_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Transformation Recipe for an einops call — prepare_transformation_recipe","text":"populated TransformRecipe() object","code":""},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"operation includes functionality transpose (axes permutation), reshape (view), squeeze, unsqueeze, stack, concatenate operations.","code":""},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"","code":"rearrange(x, expr, ...)  einops.rearrange(x, expr, ...)"},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"x tensor: array, matrix, list arrays shape type expr string: reduction pattern ... either corresponding axes lengths single list .","code":""},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"tensor type input, dimensions according output pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"composing axes, C-order enumeration used (consecutive elements different last axis). Find examples vignettes.","code":""},{"path":"https://qile0317.github.io/einops/reference/rearrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reader-friendly smart element reordering for multidimensional tensors. — rearrange","text":"","code":"# suppose we have a set of 32 images in \"h w c\" format (height-width-channel) images <- lapply(1:32, function(i) array(rnorm(30*40*3), dim = c(30, 40, 3)))  # stacked and reordered axes to \"b c h w\" format rearrange(images, 'b h w c -> b c h w') #> Warning: coercing argument of type 'list' to logical #> Error: In Einops - 'list' object cannot be coerced to type 'logical'  # concatenate images along height (vertical axis), 960 = 32 * 30 rearrange(images, 'b h w c -> (b h) w c') #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # concatenated images along horizontal axis, 1280 = 32 * 40 rearrange(images, 'b h w c -> h (b w) c') #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # flattened each image into a vector, 3600 = 30 * 40 * 3 rearrange(images, 'b h w c -> b (c h w)') #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # split each image into 4 smaller (top-left, top-right, bottom-left, bottom-right), 128 = 32 * 2 * 2 rearrange(images, 'b (h1 h) (w1 w) c -> (b h1 w1) h w c', h1=2, w1=2) #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # space-to-depth operation rearrange(images, 'b (h h1) (w w1) c -> b h w (c h1 w1)', h1=2, w1=2) #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\""},{"path":"https://qile0317.github.io/einops/reference/reduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrangement and reduction in one step — reduce","title":"Rearrangement and reduction in one step — reduce","text":"reduce() combines rearrangement reduction using reader-friendly notation.","code":""},{"path":"https://qile0317.github.io/einops/reference/reduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrangement and reduction in one step — reduce","text":"","code":"reduce(x, expr, func, ...)  einops.reduce(x, expr, func, ...)"},{"path":"https://qile0317.github.io/einops/reference/reduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrangement and reduction in one step — reduce","text":"x tensor: array, matrix, list arrays shape type expr string: reduction pattern func string function: one available reductions ('min', 'max', 'sum', 'mean', 'prod', '', ''), R function (e.g. max, mean, prod, etc.) ... either corresponding axes lengths single list .","code":""},{"path":"https://qile0317.github.io/einops/reference/reduce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearrangement and reduction in one step — reduce","text":"tensor type input, dimensions according output pattern","code":""},{"path":"https://qile0317.github.io/einops/reference/reduce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rearrangement and reduction in one step — reduce","text":"","code":"# Suppose x is a 3D array: 100 x 32 x 64 x <- array(rnorm(100 * 32 * 64), dim = c(100, 32, 64))  # perform max-reduction on the first axis # Axis t does not appear on RHS - thus we reduced over t y <- reduce(x, 't b c -> b c', 'max') #> Error: In Einops - argument \"index\" is missing, with no default  # same as previous, but using verbose names for axes y <- reduce(x, 'time batch channel -> batch channel', 'max') #> Error: In Einops - argument \"index\" is missing, with no default  # let's pretend now that x is a batch of images # with 4 dims: batch=10, height=20, width=30, channel=40 x <- array(rnorm(10 * 20 * 30 * 40), dim = c(10, 20, 30, 40))  # 2d max-pooling with kernel size = 2 * 2 for image processing y1 <- reduce(x, 'b c (h1 h2) (w1 w2) -> b c h1 w1', 'max', h2=2, w2=2) #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # same as previous, using anonymous axes, # note: only reduced axes can be anonymous y1 <- reduce(x, 'b c (h1 2) (w1 2) -> b c h1 w1', 'max') #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\"  # adaptive 2d max-pooling to 3 * 4 grid, # each element is max of 10x10 tile in the original tensor. dim(reduce(x, 'b c (h1 h2) (w1 w2) -> b c h1 w1', 'max', h1=3, w1=4)) #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\" # (10, 20, 3, 4)  # Global average pooling dim(reduce(x, 'b c h w -> b c', 'mean')) #> Error: In Einops - argument \"index\" is missing, with no default # (10, 20)  # subtracting mean over batch for each channel; # similar to x - apply(x, c(2,3,4), mean) y <- x - reduce(x, 'b c h w -> 1 c 1 1', 'mean') #> Error: In Einops - argument \"index\" is missing, with no default  # Subtracting per-image mean for each channel y <- x - reduce(x, 'b c h w -> b c 1 1', 'mean') #> Error: In Einops - argument \"index\" is missing, with no default  # same as previous, but using empty compositions y <- x - reduce(x, 'b c h w -> b c () ()', 'mean') #> Error: In Einops - no applicable method for 'contains_node' applied to an object of class \"list\""},{"path":"https://qile0317.github.io/einops/reference/repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Python-like Representation of Objects as Strings — repr","title":"Python-like Representation of Objects as Strings — repr","text":"R implementation python's repr() function. objects default repr uses print method. important pprint() function always able give repr-esque output object.","code":""},{"path":"https://qile0317.github.io/einops/reference/repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Python-like Representation of Objects as Strings — repr","text":"","code":"repr(x, indent = 0L, ...)"},{"path":"https://qile0317.github.io/einops/reference/repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Python-like Representation of Objects as Strings — repr","text":"x Object represent indent Indentation level (number spaces) ... Additional arguments passed methods","code":""},{"path":"https://qile0317.github.io/einops/reference/repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Python-like Representation of Objects as Strings — repr","text":"character vector class c(\"repr_output\", \"character\"), element line","code":""},{"path":"https://qile0317.github.io/einops/reference/tail.GroupAstNode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the last n children of a GroupAstNode as a list of AstNodes. — tail.GroupAstNode","title":"Get the last n children of a GroupAstNode as a list of AstNodes. — tail.GroupAstNode","text":"Get last n children GroupAstNode list AstNodes.","code":""},{"path":"https://qile0317.github.io/einops/reference/tail.GroupAstNode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the last n children of a GroupAstNode as a list of AstNodes. — tail.GroupAstNode","text":"","code":"# S3 method for class 'GroupAstNode' tail(x, n = 1)"},{"path":"https://qile0317.github.io/einops/reference/validate_reduction_operation.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactically Validate the reduction operation in the einops expression — validate_reduction_operation","title":"Syntactically Validate the reduction operation in the einops expression — validate_reduction_operation","text":"Syntactically Validate reduction operation einops expression","code":""},{"path":"https://qile0317.github.io/einops/reference/validate_reduction_operation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactically Validate the reduction operation in the einops expression — validate_reduction_operation","text":"","code":"validate_reduction_operation(einops_ast, operation)"},{"path":"https://qile0317.github.io/einops/reference/validate_reduction_operation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactically Validate the reduction operation in the einops expression — validate_reduction_operation","text":"einops_ast parsed Abstract Syntax Tree (AST) einops expression operation reduction operation, either string function","code":""},{"path":"https://qile0317.github.io/einops/reference/validate_reduction_operation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactically Validate the reduction operation in the einops expression — validate_reduction_operation","text":"input einops_ast (invisibly) validation passes","code":""},{"path":"https://qile0317.github.io/einops/news/index.html","id":"einops-development-version","dir":"Changelog","previous_headings":"","what":"einops (development version)","title":"einops (development version)","text":"Work progress","code":""}]
