% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compiler-backends.R
\name{BackendRegistry}
\alias{BackendRegistry}
\title{Singleton Backend Registry, managing all available backends.}
\description{
Contains global backend pool, ensuring backends are only loaded if
actually required.
}
\keyword{internal}
\section{Super class}{
\code{\link[R6P:Singleton]{R6P::Singleton}} -> \code{BackendRegistry}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BackendRegistry-get_backend}{\code{BackendRegistry$get_backend()}}
\item \href{#method-BackendRegistry-register_backend}{\code{BackendRegistry$register_backend()}}
\item \href{#method-BackendRegistry-unregister_backend}{\code{BackendRegistry$unregister_backend()}}
\item \href{#method-BackendRegistry-get_supported_types}{\code{BackendRegistry$get_supported_types()}}
\item \href{#method-BackendRegistry-get_dependencies}{\code{BackendRegistry$get_dependencies()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="R6P" data-topic="Singleton" data-id="initialize"><a href='../../R6P/html/Singleton.html#method-Singleton-initialize'><code>R6P::Singleton$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BackendRegistry-get_backend"></a>}}
\if{latex}{\out{\hypertarget{method-BackendRegistry-get_backend}{}}}
\subsection{Method \code{get_backend()}}{
detect the return relevant backend from the input
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BackendRegistry$get_backend(tensor)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tensor}}{any support tensor-like class}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A singleton instance of a \code{\link[=BackendRegistry]{BackendRegistry()}} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BackendRegistry-register_backend"></a>}}
\if{latex}{\out{\hypertarget{method-BackendRegistry-register_backend}{}}}
\subsection{Method \code{register_backend()}}{
Register a new backend singleton
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BackendRegistry$register_backend(tensor_type, backend_class)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tensor_type}}{a string with the tensor type the backend supports}

\item{\code{backend_class}}{an EinopsBackend subclass generator}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
this object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BackendRegistry-unregister_backend"></a>}}
\if{latex}{\out{\hypertarget{method-BackendRegistry-unregister_backend}{}}}
\subsection{Method \code{unregister_backend()}}{
Unregister a backend for a specific tensor type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BackendRegistry$unregister_backend(tensor_type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tensor_type}}{a string with the tensor type}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
this object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BackendRegistry-get_supported_types"></a>}}
\if{latex}{\out{\hypertarget{method-BackendRegistry-get_supported_types}{}}}
\subsection{Method \code{get_supported_types()}}{
Get a list of all registered backend types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BackendRegistry$get_supported_types()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector of backend types.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BackendRegistry-get_dependencies"></a>}}
\if{latex}{\out{\hypertarget{method-BackendRegistry-get_dependencies}{}}}
\subsection{Method \code{get_dependencies()}}{
given a tensor type, return the required packages
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BackendRegistry$get_dependencies(tensor_type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tensor_type}}{a string with the tensor type}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a character vector with required packages. Length 0 if
no packages are required.
}
}
}
