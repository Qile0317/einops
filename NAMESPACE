# Generated by roxygen2: do not edit by hand

S3method("[",AddOnlyOrderedMap)
S3method("[",OneSidedAstNode)
S3method("[<-",AddOnlyOrderedMap)
S3method("[[",AddOnlyOrderedMap)
S3method("[[<-",AddOnlyOrderedMap)
S3method("[[<-",OneSidedAstNode)
S3method(append,OneSidedAstNode)
S3method(append,default)
S3method(contains_node,GroupAstNode)
S3method(contains_node,OneSidedAstNode)
S3method(find_node_types_indices,GroupAstNode)
S3method(find_node_types_indices,OneSidedAstNode)
S3method(get_ungrouped_nodes,OneSidedAstNode)
S3method(has_composed_axes,OneSidedAstNode)
S3method(has_key,AddOnlyOrderedMap)
S3method(has_key,r2r_hashtable)
S3method(has_non_unitary_anonymous_axes,EinopsAst)
S3method(has_non_unitary_anonymous_axes,OneSidedAstNode)
S3method(keys,AddOnlyOrderedMap)
S3method(keys,r2r_hashtable)
S3method(length,AddOnlyOrderedMap)
S3method(print,AstNode)
S3method(print,EinopsAst)
S3method(print,EinopsTokenSequence)
S3method(print,GroupAstNode)
S3method(print,OneSidedAstNode)
S3method(print,ParameterizedEinopsToken)
S3method(print,SimpleEinopsToken)
S3method(print,TransformRecipe)
S3method(print,repr_output)
S3method(reduce,default)
S3method(reduce,list)
S3method(repr,character)
S3method(repr,default)
S3method(repr,list)
S3method(repr,repr_output)
S3method(tail,EinopsTokenSequence)
S3method(tail,GroupAstNode)
S3method(to_expression,EinopsAst)
S3method(to_expression,EinopsTokenSequence)
S3method(to_tokens,ConstantAstNode)
S3method(to_tokens,EinopsAst)
S3method(to_tokens,EllipsisAstNode)
S3method(to_tokens,GroupAstNode)
S3method(to_tokens,NamedAxisAstNode)
S3method(to_tokens,NothingAstNode)
S3method(to_tokens,OneSidedAstNode)
S3method(to_tokens,UnderscoreAstNode)
export("%>%")
export("repeat")
export(einops.rearrange)
export(einops.reduce)
export(einops.repeat)
export(parse_shape)
export(rearrange)
export(reduce)
importFrom(R6,R6Class)
importFrom(R6P,Singleton)
importFrom(Rcpp,sourceCpp)
importFrom(assertthat,assert_that)
importFrom(assertthat,is.count)
importFrom(assertthat,is.flag)
importFrom(assertthat,is.string)
importFrom(glue,glue)
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
useDynLib(einops, .registration = TRUE)
